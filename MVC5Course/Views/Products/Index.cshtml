@model IEnumerable<MVC5Course.Models.Product>

@{
    ViewBag.Title = "Index";
    var foo = ViewData["foo"] as IEnumerable<MVC5Course.Models.Product>; //轉成強型別後，就可以用intellisense
    var foo2 = ViewBag.foo as IEnumerable<MVC5Course.Models.Product>;
    
}


<h2>Index</h2>

@if (TempData["CreateSuccess"] != null)
{
    <h1>@TempData["CreateSuccess"]</h1>
}

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ProductName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Active)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Stock)
        </th>
        <th></th>
    </tr>

@*@foreach (var item in Model) {*@
@foreach (var item in foo2)
{
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ProductName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @item.Active
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Stock)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ProductId }) |
            @Html.ActionLink("Details", "Details", new { id=item.ProductId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ProductId })
        </td>
    </tr>
}

</table>
